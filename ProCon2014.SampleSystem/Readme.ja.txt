# 第25回プログラミングコンテスト簡易競技システム

## フォルダ構成
フォルダの構成は以下の通りとなっています。

- client\bin

簡易競技システムのサンプルクライアント（コンソール）の実行ファイルがあります。
コンソールアプリケーションになっているので、コマンドプロンプトから実行するようにしてください。

- client\src

簡易競技システムのサンプルクライアントのソースファイルがあります。

- simpleserver

簡易競技システム(コンソール版)のサンプルサーバーの実行ファイルがあります。

- publishedserver

簡易競技システム(GUI版)の実行ファイルがあります。

- problemmaker

簡易競技システムのための問題ファイル作成ツールです。

## 動作環境

### 簡易競技システム(GUI版)の動作環境
簡易競技システム(GUI版)を実行するには以下の環境が必要です。
- .NET Framework 4.5以上がインストールされていること
- TCP80番ポートが利用可能なこと
- 管理者権限があること

### 簡易競技システム(コンソール版)の動作環境
簡易競技システム(コンソール版)を実行するには以下の環境が必要です。
- .NET Framework 4.0以上に相当するものがインストールされていること
- TCP80番ポートが利用可能なこと
- 管理者権限があること

### 問題ファイル作成ツールの動作環境
問題ファイル作成ツールを実行するには以下の環境が必要です。
- .NET Framework 4.0以上がインストールされていること

### クライアントの動作環境
クライアントを実行するには以下の動作環境が必要です。
- .NET Framework 2.0以上に相当するものがインストールされていること

### 動作確認済みの環境

以下の環境で動作確認を行いました。
- Windows 8.1

.NET Framework 4.5.1

Firefox 29

- Windows 7

.NET Framework 4.5.1

Internet Explorer 11

- Ubuntu 14.04 (簡易競技システム(コンソール版)とクライアントのみ)

Mono 3.2.8

- Gentoo Linux (簡易競技システム(コンソール版)とクライアントのみ)

Mono 3.2.8

### ビルド方法
クライアントはVisual Studio 2013で開発しました。
Mono 3.2.8のxbuildでビルドできることを確認しています。

## 注意事項
配布されているプログラムの動作は、本番と同等であることを保証しません。
募集要項、FAQ、プロトコルについての内容を元にコードを作成することをお勧めします。
コンソール版の簡易競技システムのためにサンプル問題が用意してありますが、これは動作確認のために用意されたものです。
本番の問題とは一切関係ありません。


## プロトコルについて
サーバーアドレスを {ServerAddress} と書きます。
{ServerAddress} にあたる文字列は後日、通達されます。


### 問題情報の取得
問題番号、二桁表示を XX とすると、
<http://{ServerAddress}/problem/probXX.ppm>
の URL に GET リクエストを送信することで取得することが出来ます。


### 回答の提出
<http://{ServerAddress}/SubmitForm>
から提出することができます。
このフォームからは以下のようなhttpリクエストを送るようになっています。

回答の提出は、
<http://{ServerAddress}/SubmitAnswer>
に対して POST で送信します。

チームのトークンを {TeamToken}、問題番号を {ProblemID}、回答文字列を {Answer} とした時、
playerid={TeamToken}&problemid={ProblemID}&answer={Answer}
のような形式でボディ部を構成してください。
ただし、{TeamToken}、{ProblemID}、{Answer} は RFC 2396 に従ってエスケープしてください。


# Client【サンプルクライアント】の使い方
コンソールアプリケーションになっているので、コマンドプロンプトや、シェルを使って起動してください。
引数を与えずに実行すると、コマンドの実行方法が示されるので、それを参考に使用してください。

## Client の実行例
localhost で実行されている試合の問題番号00の問題ファイルを取得したい場合は、
`ProCon2014.Client.exe GetProblem localhost 0`
のようなコマンドを実行します。

また、この問題に対して作成した回答テキストファイル ans.txt を プレイヤー 1 として送信したい場合は、
`Procon2014.Client.exe SubmitAnswer localhost 0 1 ans.txt`
のようにコマンドを実行します。


## ProblemMaker【問題ファイル作成ツール】の使い方
SimpleServer や PublishedServer で使用する問題をこのプログラムで生成することが出来ます。

1. 起動したら「Select the image」をクリックし、問題で原画像として使用する画像を選択します。
2. 「Edit the image」をクリックすると使用する画像の領域、分割数、断片画像のサイズなどを調整することが出来ます。
3. 「Use the image as is」をクリックすると原画像として選択した画像をそのまま使うことが出来ます。
4. 縦分割数、横分割数、選択可能回数、選択コスト、交換コストを入力し「Generate the random problem」で問題を生成することが出来ます。


## SimpleServer【簡易競技システム(コンソール版) 】の使い方
起動する前に、カレントディレクトリにProblemMakerで作ったtest.prob25ファイルをおいてください。
(サンプルデータとして、あらかじめ用意したもの利用しても良いです。)
Tokenは1から24が使え、ProblemIDは00で固定です。

1. 起動すると、自動的にWebサーバが起動し、問題の取得と回答ができます。
コマンドライン引数として試合時間(秒数)が指定できます。
2. http://{ServerAddress}/SubmitFormにアクセスします。
3. フォームにTokenとProblemIDと回答を入力します。
4. 試合時間が終わると、結果が出力されてPress any key to exit...と表示されるます。
5. 何かキーを押すと終了します。

### SimpleServerからの出力の読み方
起動すると、試合の情報が出力されます。

試合中は、随時接続してきたクライアントのIPアドレスを出力し、
回答を受理した場合は、時間コスト、token、受理した回答が出力されます。

試合終了後に、結果テーブルが出力されます。
出力の各行は以下のフォーマットです。
(順位),(Token),(競技者名),(不一致断片画像数),(総コスト),(選択コスト),(交換コスト)

また、サーバーの実行フォルダにはlogというフォルダが作られ、その下にTest_(実行した日時)というフォルダが作られます。
このフォルダの中には、次の2つのファイルが作られます。

- answer.txt

サーバーが受理した回答のログです。
フォーマットは以下の通りです。

(ProblemID),(Token),(回答受理時刻(試合開始からの秒数))

(サーバが受け取った回答)

- http.txt

サーバーのアクセスログ

## PublishedServer【簡易競技システム(GUI版)】の使い方
1. 起動すると「Load problems」画面が表示されるので「Add a problem」から
   ProblemMaker で生成した prob25 ファイルを選択します。
2. １試合で執り行いたい問題だけ問題の追加を行います。
3. 各問題に対して勝ち抜け人数と試合時間を設定します。
4. 「OK」を押すと「Match Manage」に参加チーム情報と問題一覧、デバッグ情報が表示されます。
5. 「Start Problem」をクリックすると問題が http 経由で公開されます。
6. デバッグ情報の部分に問題を取得するための URL と、回答を送信するための URL 、ProblemID が表示されます。
7. 適当な方法で問題を解き http://localhost/SubmitForm にアクセスします。
8. Token に参加チーム情報に表示されているトークン、ProblemID、回答のテキストを入力し、送信をクリックします。
9. 提出された回答が有効回答かつ上位4位以内ならば「Play Solutions」にて復元状況を確認することが出来ます。
10. すべてのチームの詳細情報は「Ranking」から閲覧することが出来ます。
11. 提出された回答の情報は「Match Manage」のデバッグ情報からも確認することが出来ます。
12. 複数の問題を設定した場合は、問題終了後「Set Winners」をクリックすると、順位に基づいて自動的に勝ち抜けチームが選ばれます。
13. もし必要な場合は、どのチームがさいころで勝ち抜けたのかを選択する画面が出ますので、勝ち抜けたチーム選んでください。
14. 以上を繰り返すことで試合が進行していきます。